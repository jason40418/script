[ ca ]
default_ca = CA_default # The default ca section

[ CA_default ]
dir           = ./TestCA       # Where everything is kept
database      = $dir/Index.txt # database index file.
new_certs_dir = $dir/NewCerts  # default place for new certs.
serial        = $dir/Serial    # The current serial number
default_md    = default        # use public key default MD

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy = policy_match

[ policy_match ]
countryName            = match
stateOrProvinceName    = match
organizationName       = match
organizationalUnitName = optional
commonName             = supplied
emailAddress           = optional

[ req ]
default_bits       = 3072
default_keyfile    = privkey.pem
distinguished_name = req_distinguished_name
attributes         = req_attributes
# The extensions to add to the self signed cert
x509_extensions    = v3_ca

[ req_distinguished_name ]
countryName         = Country Name (2 letter code)
countryName_default = US
countryName_min     = 2
countryName_max     = 2

stateOrProvinceName         = State or Province Name (full name)
stateOrProvinceName_default = OR

localityName         = Locality Name (eg, city)
localityName_default = OR

0.organizationName         = Organization Name (eg, company)
0.organizationName_default = TianoCore

organizationalUnitName         = Organizational Unit Name (eg, section)
organizationalUnitName_default = EDKII

commonName         = Common Name (e.g. server FQDN or YOUR name)
commonName_default = TestRoot3K
commonName_max     = 64

emailAddress         = Email Address
emailAddress_default = edkii@tianocore.org
emailAddress_max     = 64

[ req_attributes ]
challengePassword     = A challenge password
challengePassword_min = 4
challengePassword_max = 20

[ v3_ca ]
# Extensions for a typical Root CA.
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical,CA:true
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign

[ v3_intermediate_ca ]
# Extensions for a typical intermediate CA.
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints       = critical, CA:true
keyUsage               = critical, digitalSignature, cRLSign, keyCertSign

[ usr_cert ]
# Extensions for user end certificates.
basicConstraints       = CA:FALSE
nsCertType             = client, email
subjectKeyIdentifier   = hash
authorityKeyIdentifier = keyid,issuer
keyUsage               = critical, nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage       = clientAuth, emailProtection
